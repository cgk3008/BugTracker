@model BugTracker.Models.Ticket
@using BugTracker.Models.Helper
@{
	ViewBag.Title = "Create";
}



<div class="main-content">
	<div class="container">

		<div class="page-content">

			<!-- Heading -->
			<div class="single-head">
				<!-- Heading -->
				<h2 class="pull-left"><i class="fa fa-ticket green"></i> Create Ticket</h2>
				<!-- Bread crumbs -->
				<div class="breads pull-right">
					@*<strong>Nav</strong> : <a href="#">Home</a> / <a href="#">Sign</a> / Home*@
				</div>
				<div class="clearfix"></div>
			</div>


			@using (Html.BeginForm())
			{
				@Html.AntiForgeryToken()

			<div class="form-horizontal">
				@*<h4>Ticket</h4>*@
				<hr />
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				@Html.HiddenFor(model => model.OwnerUserId)
				<div class="form-group">
					@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
					</div>
				</div>

				@*<div class="form-group">
			@Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
			</div>
		</div>*@

				@*<div class="form-group">
			@Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
			</div>
		</div>*@

				<div class="form-group">
					@Html.LabelFor(model => model.ProjectId, "Project Id", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						Dammit, dropdown shows soft deleted projects, need to add is project deleted to create ticket controller list.

						@Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
					</div>
				</div>

				@*<div class="form-group">
			@Html.LabelFor(model => model.OwnerUserId, "Owner of Ticket", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">

				@User.Identity.GetFullName()

				@Html.ValidationMessageFor(model => model.OwnerUserId, "", new { @class = "text-danger" })
			</div>
		</div>*@

				@*<div class="form-group">
			@Html.LabelFor(model => model.AssignedToUserId, "Assigned To User", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">

				Unassigned!!!!! not drop down list
				@Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })




				@Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
			</div>
		</div>*@


				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Create" class="btn btn-primary" />
					</div>
				</div>
			</div>
			}

			<div>
				@Html.ActionLink("Back to List", "MyTickets")
			</div>

		</div>
	</div>
</div>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
