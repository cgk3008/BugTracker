@model BugTracker.Models.Ticket

@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div class="main-content">
	<div class="container">

		<div class="page-content">

			<!-- Heading -->
			<div class="single-head">
				<!-- Heading -->
				<h2 class="pull-left"><i class="fa fa-ticket green"></i> Create Ticket</h2>
				<!-- Bread crumbs -->
				<div class="breads pull-right">
					@*<strong>Nav</strong> : <a href="#">Home</a> / <a href="#">Sign</a> / Home*@
				</div>
				<div class="clearfix"></div>
			</div>


			@using (Html.BeginForm())
			{
				@Html.AntiForgeryToken()

				<div class="form-horizontal">
					<h4>Ticket</h4>
					<hr />
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Id)

					<div class="form-group">
						@Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
						</div>
					</div>



					<div class="form-group">
						@Html.LabelFor(model => model.ProjectId, "Project Id", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
							@Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.TicketTypeId, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
							@Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.TicketPriorityId, "Priority", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
							@Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
						</div>
					</div>

					@if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
					{
						<div class="form-group">
							@Html.LabelFor(model => model.TicketStatusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
								@Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
							</div>
						</div>
					}
					<div class="form-group">
						@Html.LabelFor(model => model.OwnerUserId, "Owner User Id", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@User.Identity.Name
							@Html.ValidationMessageFor(model => model.OwnerUserId, "", new { @class = "text-danger" })
						</div>
					</div>

					@if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
					{

						@(Html.BeginForm("AssignTicket", "Tickets", FormMethod.Post))
						{
							
							<div class="form-group">
								@Html.LabelFor(model => model.AssignedToUserId, "Assign Developer", new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.DropDownList("AssignedToUserId", null, new { @class = "form-control" })
									@Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
								</div>
							</div>
						}
					}
					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="Save" class="btn btn-primary" />
						</div>
					</div>
				</div>
			}


			@*@using (Html.BeginForm("AssignTicket", "Tickets", FormMethod.Post))
			{
				@Html.AntiForgeryToken()

				<div class="form-horizontal">
					<h4>Ticket</h4>
					<hr />
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Id)

					<div class="form-group">
						@Html.LabelFor(model => model.AssignedToUserId, "Assign Developer", new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.DropDownList("AssignedToUserId", null, new { @class = "form-control" })
							@Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="Save" class="btn btn-default" />
						</div>
					</div>
				</div>
			}
			<div>*@
				@Html.ActionLink("Back to List", "Index")




			</div>
		</div>
	</div>
	@section Scripts {
		@Scripts.Render("~/bundles/jqueryval")
	}
