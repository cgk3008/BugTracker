@model BugTracker.Models.Ticket

@{
	ViewBag.Title = "Edit";
}



<div class="main-content">
	<div class="container">

		<div class="page-content">

			<!-- Heading -->
			<div class="single-head">
				<!-- Heading -->
				<h2 class="pull-left"><i class="fa fa-ticket green"></i> Edit Ticket</h2>
				<!-- Bread crumbs -->
				<div class="breads pull-right">
					@*<strong>Nav</strong> : <a href="#">Home</a> / <a href="#">Sign</a> / Home*@
				</div>
				<div class="clearfix"></div>
			</div>


			@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">

			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Id)

			@Html.HiddenFor(model => model.AssignedToUserId)

			@*@Html.HiddenFor(model => model.TicketPriorityId)
		@Html.HiddenFor(model => model.ProjectId)
		@Html.HiddenFor(model => model.TicketStatusId)
		@Html.HiddenFor(model => model.TicketTypeId)
		@Html.HiddenFor(model => model.Title)
		@Html.HiddenFor(model => model.Description)*@

			@Html.HiddenFor(model => model.OwnerUserId)
			@Html.HiddenFor(model => model.Created, "{0:dd-MMM-yyyy}")

			<div class="form-group">
				@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ProjectId, "Project Id", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.TicketTypeId, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.TicketPriorityId, "Priority", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
				</div>
			</div>

			@if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
	{
		<div class="form-group">
			@Html.LabelFor(model => model.TicketStatusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
			</div>
		</div>



}

			<div class="form-group">
				@Html.LabelFor(model => model.OwnerUserId, "Owner User Id", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Model.OwnerUserId
			@Html.ValidationMessageFor(model => model.OwnerUserId, "", new { @class = "text-danger" })
		</div>
		</div>


		@*<div class="form-group">
		@Html.LabelFor(model => model.Updated, "Updated", htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Model.Updated
			@Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
		</div>
	</div>*@


		@*@if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))


	{*@



		<div class="form-group">
			@Html.LabelFor(model => model.AssignedToUserId, "Assigned To User Id", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">

				@Model.AssignedToUserId
		@Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
		</div>
		</div>


		@*}*@
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-primary" />
			</div>
		</div>
		</div>
}

			<h3>Assign user in "Details" page or ticket "Index" page</h3>
			<br />
			<br />
			@Html.ActionLink("Back to List", "MyTickets")

		</div>
	</div>
</div>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
