@model BugTracker.Models.Ticket

@{
	ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
	<h4>Ticket</h4>
	<hr />
	<dl class="dl-horizontal">
		<dt>
			@Html.DisplayNameFor(model => model.AssignedToUser.FirstName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.AssignedToUser.FirstName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.OwnerUser.FirstName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.OwnerUser.FirstName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Priority.Name)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Priority.Name)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Project.Name)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Project.Name)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Status.Name)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Status.Name)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Type.Name)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Type.Name)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Body)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Body)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Description)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Description)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Created)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Created)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Updated)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Updated)
		</dd>

	</dl>
</div>


@using (Html.BeginForm("Create", "TicketComments"))
{
	@Html.AntiForgeryToken()
	@Html.Hidden("TicketId", Model.Id)
	<div class="form-horizontal">
		<h4>Comments</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		@foreach (var comm in Model.Comment)

		{
			<div class="col-md-offset-2 col-md-10 border">
				@*wrap this in a bootstrap "well"*@
				@*<ul class="container-fluid position-relative no-side-padding">*@

				@*I want to put DisplayName not AuthorId and then modify Created format for display*@
				<h6>@Html.DisplayFor(model => comm.User.FullName) at @Html.DisplayFor(model => comm.Created, "{0:dd-MMM-yyyy}")</h6>
				@*look for format addition to create date/time to code above!!!*@


				<h4>@Html.DisplayFor(model => comm.Body)</h4>


			


			</div>

			if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
			{
				<div class="col-md-offset-8 col-md-2 border">
					@Html.ActionLink("Edit ----- ", "Edit", "TicketComments", new { id = comm.Id }, null)
					@Html.ActionLink(" Details ----- ", "Details", "TicketComments", new { id = comm.Id }, null)
					@Html.ActionLink("Delete", "Delete", "TicketComments", new { id = comm.Id }, null)
				</div>
			}




			<br />
		}

		<input name="PostId" value="@Model.Id" hidden />
		<div class="form-group">
			<div class="col-md-offset-2 col-md-12">

				<textarea name="Body" id="editor1" rows="10" cols="80" placeholder="Enter Comment" maxlength="5000"></textarea>

				@*@Html.LabelFor(model => model.MediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">

			@Html.ValidationMessageFor(model => model.MediaURL, "", new { @class = "text-danger" })
			<input name="image" type="file" class="form-control" id="fileUpload" />
		</div>*@


			</div>
		</div>
		<div class="form-group">
			<div class="col-md-offset-2 col-md-12">
				@if (Request.IsAuthenticated)
				{
					<input type="submit" value="Submit Comment" class="btn btn-default" />
				}
				else
				{ <h4>LOGIN OR REGISTER TO SUBMIT COMMENTS</h4>
					<input disabled type="submit" value="Submit Comment" class="btn btn-default" />
				}

			</div>
		</div>
	</div>


}








<p>
	@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
	@Html.ActionLink("Back to List", "Index")
</p>
